link(rel='stylesheet', href='/css/realTime.css')
#realTime-container.container-fluid
  .row
    .col-6.mapBox 
      .map
        div.map-icon(onmouseover="popupView('block');" onmouseout="popupView('none');" style=(`background-image: url('/images/map_icon_good.png'); background-size: cover; background-repeat: no-repeat;`))
          div#map-popup(style=(`position: relative; width: 100%; height: 100%; display: none;`))
            div
              div(style=(`padding-right: 5px;`)) 
                img(src="images/temperature.png" width="30") 
                span#part3 
              div(style=(`padding-left: 5px; width: 190px;`))
                div#part1(style=(`border-bottom: #ececec 1px solid;`))
                div#part2
    .col-5.infoBox
      .col-12.info 
        .row.info-title
          .col-12 
            span 우리동네 대기정보 
            //- button.btn.btn-primary.search-btn 측정소 검색
        .row
          .col-12 동구 을(를) 중심으로 측정한 대기질정보
        .row.info-circle-chart
          #pm2-5-circle(onClick="getChartData('dust')")
            div.small-window-chart-container
              canvas(id="chartPic" width="265" height="161" style={ margin: '0px auto' })
              div#dust-circle-chart-text
              div.circle-chart-needle#dust-circle-chart-needle
          #pm2-5-circle(onClick="getChartData('ultrafine')")
            div.small-window-chart-container
              canvas(id="chartPic2" width="265" height="161" style={ margin: '0px auto' })
              div#ultrafine-circle-chart-text
              div.circle-chart-needle#ultrafine-circle-chart-needle
        .row
          table#dust-value-table
            thead
              tr
                th 항목
                th 등급
                th 측정값
                th 항목 
                th 등급
                th 측정값
            tbody
              tr
                td.legend(rowspan="2") 미세먼지(PM<sub>10</sub>)
                td#dust-hour-icon(rowspan="2") ●
                td#dust-hour
                td.legend(rowspan="2") 초미세먼지(PM<sub>2.5</sub>)
                td#ultrafine-hour-icon(rowspan="2") ●
                td#ultrafine-hour
              tr
                td#ultrafine-day
                td#dust-day
        .row.info-line-chart
          #pm2-5-chart.col-12   
            canvas(id="barChart" width="400" height="176")
            script(src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js")
            script(type='text/javascript').
              let barChartData = {
                        labels: [].map((d, index) => { return d.rgstDt.split(" ")[1] }),
                        datasets: [{
                          label: 'PM2.5',
                          data: [].map(d => { return d.value }),
                          backgroundColor: [].map(d => { return d.status }),
                        }]
                      }
              
              let barChart;
              let ajaxInterval;

              $(document).ready(() => {
                getChartData('dust');
                getPmNowData();
              });

              const popupView = (value) => {
                $("#map-popup").css('display', value);
              }

              const nvl = (value) => {
                return (value === null || value === void 0) ? 0 : value;
              }

              const getPmNowData = () => {
                $.ajax({
                  url: "/api/get/pm/now", 
                  type: 'get', 
                  dataType : 'json', 
                  success: (result) => {
                    let imageName = 'good';

                    if(result.dustStatus === '#187FCC') {
                      imageName = 'good';
                    }
                    else if (result.dustStatus === '#8EC641') {
                      imageName = 'normal';
                    }
                    else if (result.dustStatus === '#FFD014') {
                      imageName = 'bad';
                    }
                    else {
                      imageName = 'very_bad';
                    }
                    $(".map-icon").css("background-image", `url('/images/map_icon_${imageName}.png')`);
                    $("#dust-hour-icon").css("color", result.dustStatus);
                    $("#ultrafine-hour-icon").css("color", result.ultrafineStatus);
                    $("#ultrafine-hour").text(`${nvl(result.ultrafineHour)}㎍/㎥(1h)`);
                    $("#dust-hour").text(`${nvl(result.dustHour)}㎍/㎥(1h)`);
                    $("#ultrafine-day").text(`${nvl(result.ultrafineDay)}㎍/㎥(24h)`);
                    $("#dust-day").text(`${nvl(result.dustDay)}㎍/㎥(24h)`);

                    $("#part1").text(`미세먼지 : ${nvl(result.dustHour)}㎍/㎥`);
                    $("#part2").text(`초미세먼지 : ${nvl(result.ultrafineHour)}㎍/㎥`);
                    $("#part3").text(` ${nvl(result.temperature)}°C`);
                  },
                  error: (err) => {
                    console.log(err);
                  }
                })
              }

              const getChartData = (type) => {
                window.clearInterval(ajaxInterval);

                $.ajax({
                  url: "/api/get/chartdata", 
                  type: 'get', 
                  dataType : 'json', 
                  success: (result) => {
                    const title = type === 'dust' ? '미세먼지 (PM10)' : '초미세먼지 (PM2.5)';

                    barChartData = {
                      labels: result.lineGraphData.map((d, index) => { return d.rgstDt }),
                      datasets: [{
                        label: title,
                        data: result.lineGraphData.map(d => { return d[type] }),
                        backgroundColor: result.lineGraphData.map(d => { return d.status }),
                      }]
                    }

                    if(nvl(barChart) === 0) {
                      createChart(result);
                    }
                    
                    document.querySelector("#dust-circle-chart-needle").style.transform = `rotate(${(180 * result.dustData / 100) + -90}deg)`;
                    document.querySelector("#ultrafine-circle-chart-needle").style.transform = `rotate(${(180 * result.ultrafineData / 100) + -90}deg)`;
                    
                    barChart.data = barChartData;
                    barChart.options.title.text = title;
                    barChart.update();
                  },
                  error: (err) => {
                    console.log(err);
                  }
                })

                ajaxInterval = window.setInterval(() => {
                  getChartData(type);
                  getPmNowData();
                }, 100000);
              }

              const createChart = () => {
                const ctx = document.getElementById("chartPic").getContext('2d');
                const circleChartByUltrafine = new Chart(ctx, {
                  type: 'doughnut',
                  data: {
                      datasets: [{
                        data: [15, 25, 35, 25],
                        backgroundColor: ["#2359C4", "#01B56E", "#F5C932", "#DA3539"],
                        borderColor: ["#2359C4", "#01B56E", "#F5C932", "#DA3539"],
                        borderWidth: 1
                      }],
                      labels: ['좋음', '보통', '나쁨', '매우 나쁨']
                    },
                  options: {
                    cutoutPercentage: 65,
                    circumference: Math.PI,
                    rotation: -Math.PI,
                    title: { 
                      display: true,
                      text: "미세먼지 (PM10)",
                    },
                    legend: {
                      display: false
                    },
                  }
                });

                const ctx2 = document.getElementById("chartPic2").getContext('2d');
                const circleChartByDust = new Chart(ctx2, {
                  type: 'doughnut',
                  data: {
                      datasets: [{
                        data: [15, 20, 40, 25],
                        backgroundColor: ["#2359C4", "#01B56E", "#F5C932", "#DA3539"],
                        borderColor: ["#2359C4", "#01B56E", "#F5C932", "#DA3539"],
                        borderWidth: 1
                      }],
                      labels: ['좋음', '보통', '나쁨', '매우 나쁨']
                    },
                  options: {
                    cutoutPercentage: 65,
                    circumference: Math.PI,
                    rotation: -Math.PI,
                    title: { 
                      display: true,
                      text: "초미세먼지 (PM2.5)",
                    },
                    legend: {
                      display: false
                    },
                  }
                });
                
                  
                const barChartObject = document.getElementById("barChart").getContext('2d');
                barChart = new Chart(barChartObject,  {
                  type: 'bar',
                  data: barChartData,
                  options: {
                    animation: false,
                    title: { 
                      display: true,
                      text: "초미세먼지 (PM2.5)",
                    },
                    legend: {
                      display: false
                    },
                    scales: {
                      xAxes: [{
                        ticks: {
                          fontSize: 10
                        }
                      }],
                      yAxes: [{
                        ticks: {
                          fontSize: 15,
                          beginAtZero: true,
                          suggestedMax: 20
                        }
                      }]
                    }
                  }
                });
              }
