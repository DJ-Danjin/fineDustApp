link(rel='stylesheet', href='/css/realTime.css')
#realTime-container.container-fluid
  .row
    .col-6.mapBox 
      .map
    .col-5.infoBox
      .col-12.info 
        .row.info-title
          .col-12 
            span 우리동네 대기정보 
            //- button.btn.btn-primary.search-btn 측정소 검색
        .row
          .col-12 동구 을(를) 중심으로 측정한 대기질정보
        .row.info-circle-chart
          #pm2-5-circle
            canvas(id="chartPic" width="400" height="176")
            div#circle-chart-needle
          #pm2-5-circle-text
            div#circle-chart-today 
            div#circle-chart-ultrafine-hour
            div#circle-chart-ultrafine-day
        .row
          table#dust-value-table
            thead
              tr
                th 항목
                th 등급
                th 측정값
                th 항목 
                th 등급
                th 측정값
            tbody
              tr
                td.legend(rowspan="2") 초미세먼지(PM<sub>2.5</sub>)
                td(rowspan="2") ㅇ
                td#ultrafine-hour
                td.legend(rowspan="2") 미세먼지(PM<sub>10</sub>)
                td(rowspan="2") ㅇ
                td#dust-hour
              tr
                td#ultrafine-day
                td#dust-day
        .row.info-line-chart
          #pm2-5-chart.col-12   
            canvas(id="chartPic2" width="400" height="176")
            script(src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.3/Chart.min.js")
            script(type='text/javascript').
              let barChartData = {
                        labels: [].map((d, index) => { return d.rgstDt.split(" ")[1] }),
                        datasets: [{
                          label: 'PM2.5',
                          data: [].map(d => { return d.value }),
                          backgroundColor: [].map(d => { if(d.value > 35) { return "#DAE124" } else {return "#24A6E1"} }),
                        }]
                      }
              let barChart;
              let circleChart;

              $(document).ready(() => {
                getChartData();

                window.setInterval(() => {
                  getChartData();
                }, 100000);
              });

              const getChartData = () => {
                $.ajax({
                  url: "/api/get/chartdata", 
                  type: 'get', 
                  dataType : 'json', 
                  success: (result) => {
                    console.log(result);
                    if(barChartData.datasets[0].data.length === 0) {
                      barChartData = {
                        labels: result.lineGraphData.map((d, index) => { return d.rgstDt }),
                        datasets: [{
                          label: 'PM2.5',
                          data: result.lineGraphData.map(d => { return d.value }),
                          backgroundColor: result.lineGraphData.map(d => { if(d.value > 35) { return "#DAE124" } else {return "#24A6E1"} }),
                        }]
                      }
                      createChart(result);
                    }
                    
                    updatePageData(result);
                  },
                  error: (err) => {
                    console.log(err);
                  }
                })
              }

              const updatePageData = data => {
                barChartData = {
                      labels: data.lineGraphData.map((d, index) => { return d.rgstDt.split(" ")[1] }),
                      datasets: [{
                        label: 'PM2.5',
                        data: data.lineGraphData.map(d => { return d.value }),
                        backgroundColor: data.lineGraphData.map(d => { if(d.value > 35) { return "#DAE124" } else {return "#24A6E1"} }),
                      }]
                    }
                circleChart.update();

                document.querySelector("#circle-chart-needle").style.transform = `rotate(${(180 * data.data / 100) + -90}deg)`;
                $("#circle-chart-today").text(data.today);
                $("#circle-chart-ultrafine-hour").text(`● 1시간: ${data.ultrafineHour}ug/m²`);
                $("#circle-chart-ultrafine-day").text(`● 24시간: ${data.ultrafineDay}ug/m²`);

                $("#ultrafine-hour").text(`${data.ultrafineHour}㎍/㎥(1h)`);
                $("#dust-hour").text(`${data.dustHour}㎍/㎥(1h)`);
                $("#ultrafine-day").text(`${data.ultrafineDay}㎍/㎥(24h)`);
                $("#dust-day").text(`${data.dustDay}㎍/㎥(24h)`);
              }

              const createChart = () => {
                const ctx = document.getElementById("chartPic").getContext('2d');
                const chart = new Chart(ctx,  {
                    type: 'doughnut',
                    data: {
                        datasets: [{
                          data: [15, 25, 50, 15],
                          backgroundColor: ["#24a6e1", "#24e124", "#dae124", "#e12424"],
                          borderColor: ["#24a6e1", "#24e124", "#dae124", "#e12424"],
                          borderWidth: 1
                        }],
                        labels: ['매우 좋음', '좋음', '나쁨', '매우 나쁨']
                      },
                    options: {
                      cutoutPercentage: 65,
                      circumference: Math.PI,
                      rotation: -Math.PI,
                      title: { 
                        display: true,
                        text: "PM2.5",
                      },
                      legend: {
                        display: false
                      },
                    }
                  });
                  
                const ctx2 = document.getElementById("chartPic2").getContext('2d');
                circleChart = new Chart(ctx2,  {
                    type: 'bar',
                    data: barChartData,
                    options: {
                      title: { 
                        display: true,
                        text: "PM2.5",
                      },
                      legend: {
                        display: false
                      },
                      scales: {
                        xAxes: [{
                          ticks: {
                            fontSize: 10
                          }
                        }],
                        yAxes: [{
                          ticks: {
                            fontSize: 15
                          }
                        }]
                      }
                    }
                  });
              }
